{"version":3,"sources":["components/Container/Container.module.css","components/Input/Input.module.css","components/Empty/Empty.module.css","components/Emojis/Emojis.module.css","components/Navbar/Navbar.module.css","components/EmojiBox/Emoji.module.css","assets/search-icon.svg","assets/emoji-icon.svg","components/Navbar/index.jsx","components/Container/index.jsx","components/Input/index.jsx","components/Empty/index.jsx","components/EmojiBox/index.jsx","components/Emojis/index.jsx","utils/filterEmojis.js","App.js","index.js"],"names":["module","exports","Navbar","className","styles","nav","style","marginRight","navIcon","src","emojiIcon","alt","marginTop","searchIcon","navTitle","Container","children","container","Input","onChange","value","input","placeholder","Empty","text","empty","EmojiBox","title","symbol","useState","selected","setSelected","useEffect","timer","setTimeout","clearTimeout","onClick","navigator","clipboard","writeText","classnames","emojiBox","emoji","dangerouslySetInnerHTML","__html","codePointAt","emojiText","Emojis","emojisData","searchText","filteredEmojis","setFilteredEmojis","maxResults","filter","toLowerCase","includes","keywords","splice","filterEmojis","length","emojisGrid","map","data","index","App","setEmojisData","setSearchText","loading","setLoading","error","setError","a","axios","get","res","console","fetchEmojis","event","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8350697.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3PNbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empty\":\"Empty_empty__3-Yhn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emojisGrid\":\"Emojis_emojisGrid__2HyGw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"navTitle\":\"Navbar_navTitle__3a_w2\",\"navIcon\":\"Navbar_navIcon__XDck0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emojiBox\":\"Emoji_emojiBox__2kq6S\",\"selected\":\"Emoji_selected__2zWeh\",\"emoji\":\"Emoji_emoji__AQpcI\",\"emojiText\":\"Emoji_emojiText__M0qho\"};","export default __webpack_public_path__ + \"static/media/search-icon.f071e5c8.svg\";","export default __webpack_public_path__ + \"static/media/emoji-icon.d338b090.svg\";","import styles from './Navbar.module.css';\n\nimport searchIcon from '../../assets/search-icon.svg';\nimport emojiIcon from '../../assets/emoji-icon.svg'\n\nconst Navbar = () => {\n    return (\n        <nav className={styles.nav}>\n            <img style={{ marginRight: 8 }} className={styles.navIcon} src={emojiIcon} alt=\"emojiicon\" />\n            <img style={{ marginTop: 3 }} className={styles.navIcon} src={searchIcon} alt=\"searchicon\" />\n            <span className={styles.navTitle}> er </span>\n        </nav>\n    )\n}\n\nexport default Navbar","import PropTypes from 'prop-types';\n\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => {\n    return (\n        <section className={styles.container}>\n            {children}\n        </section>\n    )\n}\n\nContainer.propTypes = {\n    children: PropTypes.node\n}\n\nexport default Container","import PropTypes from 'prop-types';\n\nimport styles from './Input.module.css';\n\nconst Input = ({ onChange, value }) => {\n    return (\n        <input \n            className={styles.input}\n            onChange={onChange}\n            placeholder=\"Search Emoji\"\n            value={value}\n        />\n    )\n}\n\nInput.propTypes = {\n    onChange: PropTypes.func,\n    value: PropTypes.string\n}\n\nexport default Input","import PropTypes from 'prop-types';\n\nimport styles from './Empty.module.css';\n\nconst Empty = ({ text }) => {\n    return (\n        <div className={styles.empty}>\n            {text}\n        </div>\n    )\n}\n\nEmpty.propTypes = {\n    text: PropTypes.string.isRequired\n}\n\nexport default Empty","import { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport classnames from 'classnames';\n\nimport styles from './Emoji.module.css';\n\nconst EmojiBox = ({ title, symbol }) => {\n    const [selected, setSelected] = useState(false)\n\n    // useEffect ini akan dijalankan bila state selected dijalankan\n    useEffect(() => {\n        // variable timer mempunyai sebuah isi setTimeout yang nantinya\n        // akan kita clear prosesnya atau dihentikan menggunakan clearTimeout\n        // tapi didalam setTimeout disetting untuk merubah nilai selected menjadi false kembali\n        // dengan setSelected yang berdurasi 0.6 detik \n        // yang nantinya nilai selected berubah kembali seperti semula menjadi false\n        // dan emoji menjadi bentuk semula\n\n        const timer = setTimeout(() => setSelected(false), 600)\n\n        return () => clearTimeout(timer)\n    }, [selected])\n\n    return (\n        <div\n        // Jika onClick dijalankan yang berarti box icon di klik\n        // akan mengcopy symbolnya dengan props navigator.clipboard.writeText(symbol)\n        // dan akan mengubah state selected menjadi true\n        // karena setSelected di set menjadi true\n        onClick={() => {\n            // prop navigator.clipboard.writeText() ini digunakan untuk melakukan copy dan menyimpannya dalam clipboard yang bisa kita paste nantinya\n            \n            // ini dia propnya navigator.clipboard.writeText(symbol)\n            navigator.clipboard.writeText(symbol)\n\n            // setSelected menyetting nilainya menjadi true yang awalnya false\n            setSelected(true)\n\n            // setelah semua proses diatas dijalankan maka useEffect juga akan berjalan\n            // karena useEffect sudah disetting jalan ketika ada perubahan pada state selected\n            // terjadi perubahannya karena selected yang awalnya bernilai false berubah menjadi true\n            // karena setSelected diset menjadi true maka terjadilah perubahan\n        }}\n        className={classnames(styles.emojiBox, {\n            [styles.selected]: selected\n        })}\n        >\n            <p \n                className={styles.emoji}\n                // prop dangerouslySetInnerHTML ini digunakan unruk mengonvert string menjadi sebuah html yang didalamnya ada emoji\n                dangerouslySetInnerHTML={{\n                    __html: `&#${symbol.codePointAt(0)}`\n                }}\n            />\n\n            <p className={styles.emojiText}>\n                {/* \n                    apakah selected bernilai true\n                    jika benar maka yang muncul di browser adalah teks Copied\n                    tetapi jika salah maka akan memunculkan nama dari masing - masing emoji\n                */}\n                {selected ? 'Copied' : title}\n            </p>\n        </div>\n    )\n}\n\nEmojiBox.propTypes = {\n    title: PropTypes.string,\n    symbol: PropTypes.string\n}\n\nexport default EmojiBox","import { useState, useEffect } from 'react';\nimport PropTypes from  'prop-types';\n\nimport EmojiBox from '../EmojiBox';\nimport Empty from '../Empty';\n\nimport styles from './Emojis.module.css';\n\nimport { filterEmojis } from '../../utils/filterEmojis';\n\nconst Emojis = ({ emojisData, searchText }) => {\n    const [filteredEmojis, setFilteredEmojis] = useState([])\n\n    useEffect(() => {\n        \n        setFilteredEmojis(filterEmojis({\n            emojisData,\n            searchText\n        }))\n\n    }, [emojisData, searchText])\n\n    if (filteredEmojis.length > 0) {\n        return (\n            <div className={styles.emojisGrid}>\n                {filteredEmojis.map((data, index) => (\n                    <EmojiBox \n                        key={index}\n                        title={data.title} \n                        symbol={data.symbol} \n                    />\n                ))}\n            </div>\n        )\n    } else {\n        return (\n            <Empty text=\"Opps, emoji yang anda cari tidak ada\" />\n        )\n    }\n}\n\nEmojis.propTypes = {\n    emojisData: PropTypes.array,\n    searchText: PropTypes.string\n}\n\nexport default Emojis","export const filterEmojis = ({ emojisData, searchText = \"\", maxResults = 20 }) => {\n\n    const filteredEmojis = emojisData.filter(emoji => {\n\n        // Jika emoji.title ( merubah menjadi huruf kecil dengan toLowerCase() ) \n        // ada sebuah kata yaitu value dari searchText ( merubah menjadi huruf kecil dengan toLowerCase() ) \n        // maka akan mereturn true\n\n        // Penjelasan Logikanya:\n        // \n        // yang artinya semua emoji dengan title yang sesuai dengan searchText\n        // semua value atau isi emoji tersebut akan masuk kedalam variable filteredEmojis sebagai value dari array\n        // yang dikembalikan oleh method filter adalah array baru yang berisi\n        // array yang sudah difilter yang akan disimpan didalam variable filteredEmojis\n\n        if (emoji.title.toLowerCase().includes(searchText.toLowerCase())) {\n            return true\n        }\n\n        // Logika ini sama kaya yang diatas\n        // bedanya ini mencari sebuah keywords atau deskripsi dari emoji tersebut \n        if (emoji.keywords.includes(searchText.toLowerCase())) {\n            return true\n        }\n\n        // dan jika tidak ada maka akan mereturn false atau mengembalikan nilai false\n        // yang artinya kita tidak jadi menjalankan method filter\n\n        return false\n\n    })\n\n    return filteredEmojis.splice(0, maxResults)\n}","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Navbar from './components/Navbar';\nimport Container from './components/Container';\nimport Input from './components/Input';\nimport Empty from './components/Empty';\nimport Emojis from './components/Emojis';\n\nfunction App() {\n  const [emojisData, setEmojisData] = useState([])\n  const [searchText, setSearchText] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    async function fetchEmojis() {\n      setLoading(true)\n\n      try {\n\n        const res = await axios.get('https://run.mocky.io/v3/fe964130-70d0-430f-b839-e55081423c28')\n        setEmojisData(res.data)\n        setLoading(false)\n        \n      } catch (error) {\n\n        console.error(error);\n        setError(true)\n        setLoading(false)\n        \n      }\n      \n      \n    }\n\n    fetchEmojis()\n  }, [])\n\n  const handleSearchEmojis = (event) => {\n    setSearchText(event.target.value)\n  }\n\n  return (\n    <>\n      <Navbar />\n\n      <Container>\n        <Input \n          onChange={handleSearchEmojis}\n          value={searchText}\n        />\n\n\n        {loading && <Empty text=\"Loading ...\" />}\n        {error && <Empty text=\"Error!\" />}\n        {emojisData.length > 0 && <Emojis emojisData={emojisData} searchText={searchText} />}\n      </Container>   \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}